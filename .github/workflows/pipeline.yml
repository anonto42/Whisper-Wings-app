# name: Workflow Pipeline

# on:
#   push:
#     branches: [ main ]

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v3

#     - name: Setup Node.js
#       uses: actions/setup-node@v3
#       with:
#         node-version: 18

#     - name: Install dependencies
#       run: npm install

#     - name: Eslint check
#       run: npm run lint:check

#     - name: Build application
#       run: npm run build

#     - name: Get ssh key and deploy to development server
#       run: |
#         mkdir -p ~/.ssh
#         echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa && chomd 600 ~/.ssh/id_rsa
#         chmod 600 ~/.ssh/id_rsa

#     - name: Deploy by scr
#       run: scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -r ./Whisper-Wings-app/* ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:./Whisper-Wings-app

#     - name: Restart server
#       run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "cd ./Whisper-Wings-app && git pull && docker compose up --build --force-recreate --remove-orphans -d"

#     # - name: Deploy to development server via SSH
#     #   uses: appleboy/ssh-action@v1.0.0
#     #   with:
#     #     host: ${{ secrets.SERVER_HOST }}
#     #     username: ${{ secrets.SERVER_USER }}
#     #     key: ${{ secrets.SERVER_SSH_KEY }}
#     #     port: 22
#     #     script: |
#     #       cd ./Whisper-Wings-app
#     #       git pull
#     #       docker compose up --build --force-recreate --remove-orphans -d


name: Workflow Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: npm install

    - name: Eslint check
      run: npm run lint:check

    - name: Build application
      run: npm run build

    - name: Get SSH key and deploy to development server
      run: |
        # mkdir -p ~/.ssh
        # echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        # chmod 600 ~/.ssh/id_rsa
        cp "${{ secrets.SERVER_SSH_KEY }}" copyTest.pem
        chmod 600 copyTest.pem
        cat copyTest.pem

    # - name: Deploy by scp
    #   run: scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -r ./Whisper-Wings-app/* ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:./Whisper-Wings-app

    - name: Deploy by termenal
      run: |
        ssh -i copyTest.pem ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "cd ./Whisper-Wings-app && git pull && docker compose up --build --force-recreate --remove-orphans -d"

    # - name: Restart server
    #   run: ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "cd ./Whisper-Wings-app && git pull && docker compose up --build --force-recreate --remove-orphans -d"
